// Block definition (there may be more than one block per file)
FUNCTION_BLOCK metric

// Define input variables
VAR_INPUT
    delay : REAL;
    bandwidth : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    metric : REAL;
END_VAR

// Fuzzify input variable 'delay'
FUZZIFY delay
    TERM worst := (0, 1) (500, 0) ;
    TERM bad   := (1, 0) (500,1) (1000,0);
    TERM good  := (500, 0) (1000, 1);
END_FUZZIFY

// Fuzzify input variable 'bandwidth'
FUZZIFY bandwidth
    TERM bad  := (0, 1) (500, 0) ;
    TERM good := (1, 0) (500,1) (1000,0);
    TERM best := (500, 0) (1000, 1);
END_FUZZIFY

// Defuzzify output variable 'metric'
DEFUZZIFY metric
    TERM worst  := (0,0)  (0.15,0);
    TERM bad    := (0,0) (0.2,1) (0.5,0);
    TERM normal := (0.2,0) (0.5,1) (0.8,0);
    TERM good   := (0.5,0) (0.75,1) (1,0);
    TERM best   := (0.9,0) (1,1);

    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF bandwidth IS bad  AND delay IS worst THEN metric IS worst;
    RULE 2 : IF bandwidth IS bad  AND delay IS bad   THEN metric IS bad;
    RULE 3 : IF bandwidth IS bad  AND delay IS good  THEN metric IS normal;
    RULE 4 : IF bandwidth IS good AND delay IS worst THEN metric IS bad;
    RULE 5 : IF bandwidth IS good AND delay IS bad   THEN metric IS normal;
    RULE 6 : IF bandwidth IS good AND delay IS good  THEN metric IS good;
    RULE 7 : IF bandwidth IS best AND delay IS worst THEN metric IS normal;
    RULE 8 : IF bandwidth IS best AND delay IS bad   THEN metric IS good;
    RULE 9 : IF bandwidth IS best AND delay IS good  THEN metric IS best;
    RULE 10 : IF delay IS worst THEN metric IS worst;
    RULE 11 : IF bandwidth IS bad THEN metric IS bad;
    

END_RULEBLOCK

END_FUNCTION_BLOCK